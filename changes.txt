import requests
import csv

# ====== CONFIGURATION ======
GITHUB_TOKEN = "ghp_YourPersonalAccessTokenHere"  # Replace with your token
ORG_NAME = "your-org-name"  # Replace with your org name
GITHUB_API_URL = "https://github.yourcompany.com/api/v3"  # Or "https://api.github.com"
CSV_OUTPUT_FILE = f"{ORG_NAME}_public_repos.csv"

# ====== HEADERS ======
headers = {
    "Authorization": f"token {GITHUB_TOKEN}",
    "Accept": "application/vnd.github+json"
}

# ====== FUNCTION TO LIST PUBLIC REPOS ======
def list_public_repos(org_name):
    public_repos = []
    page = 1
    per_page = 100

    while True:
        url = f"{GITHUB_API_URL}/orgs/{org_name}/repos?type=public&per_page={per_page}&page={page}"
        response = requests.get(url, headers=headers)

        if response.status_code != 200:
            print(f"Failed to retrieve repos: {response.status_code} - {response.text}")
            break

        data = response.json()
        if not data:
            break

        for repo in data:
            public_repos.append({
                "organization": org_name,
                "repository_name": repo["name"],
                "url": repo["html_url"],
                "description": repo["description"] or "",
                # Optional extras:
                "created_at": repo["created_at"],
                "updated_at": repo["updated_at"],
                "language": repo["language"] or ""
            })

        page += 1

    return public_repos

# ====== WRITE TO CSV ======
def write_repos_to_csv(repos, filename):
    fieldnames = [
        "organization",
        "repository_name",
        "url",
        "description",
        "created_at",       # optional
        "updated_at",       # optional
        "language"          # optional
    ]
    
    with open(filename, mode='w', newline='', encoding='utf-8') as csvfile:
        writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
        writer.writeheader()
        for repo in repos:
            writer.writerow(repo)

# ====== MAIN ======
if __name__ == "__main__":
    repos = list_public_repos(ORG_NAME)
    if repos:
        print(f"Found {len(repos)} public repositories in '{ORG_NAME}'. Writing to {CSV_OUTPUT_FILE}...")
        write_repos_to_csv(repos, CSV_OUTPUT_FILE)
        print("Done.")
    else:
        print("No public repositories found or access denied.")
